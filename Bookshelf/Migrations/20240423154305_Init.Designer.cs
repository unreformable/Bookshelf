// <auto-generated />
using System;
using Bookshelf.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bookshelf.Migrations
{
    [DbContext(typeof(Bookshelfcontext))]
    [Migration("20240423154305_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Bookshelf.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AuthorBookId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorBookId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Bookshelf.Models.AuthorBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AuthorBooks");
                });

            modelBuilder.Entity("Bookshelf.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AuthorBookId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(2200)");

                    b.Property<int>("Pages")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("UserBookId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AuthorBookId");

                    b.HasIndex("UserBookId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Bookshelf.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Login")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("UserBookId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserBookId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bookshelf.Models.UserBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PagesRead")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Review")
                        .HasColumnType("varchar(2048)");

                    b.HasKey("Id");

                    b.ToTable("UserBooks");
                });

            modelBuilder.Entity("Bookshelf.Models.Author", b =>
                {
                    b.HasOne("Bookshelf.Models.AuthorBook", "AuthorBook")
                        .WithMany("Authors")
                        .HasForeignKey("AuthorBookId");

                    b.Navigation("AuthorBook");
                });

            modelBuilder.Entity("Bookshelf.Models.Book", b =>
                {
                    b.HasOne("Bookshelf.Models.AuthorBook", "AuthorBook")
                        .WithMany("Books")
                        .HasForeignKey("AuthorBookId");

                    b.HasOne("Bookshelf.Models.UserBook", "UserBook")
                        .WithMany("Books")
                        .HasForeignKey("UserBookId");

                    b.Navigation("AuthorBook");

                    b.Navigation("UserBook");
                });

            modelBuilder.Entity("Bookshelf.Models.User", b =>
                {
                    b.HasOne("Bookshelf.Models.UserBook", "UserBook")
                        .WithMany("Users")
                        .HasForeignKey("UserBookId");

                    b.Navigation("UserBook");
                });

            modelBuilder.Entity("Bookshelf.Models.AuthorBook", b =>
                {
                    b.Navigation("Authors");

                    b.Navigation("Books");
                });

            modelBuilder.Entity("Bookshelf.Models.UserBook", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
